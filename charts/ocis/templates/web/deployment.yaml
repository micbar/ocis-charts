apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: {{ template "ocis.namespace" . }}
  labels:
    {{- include "ocis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: web
  {{- if and (not .Values.autoscaling.enabled) (.Values.services.web.replicas) }}
  replicas: {{ .Values.services.web.replicas }}
  {{- end }}
  {{- if .Values.deploymentStrategy }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: web
        {{- include "ocis.labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web/config.yaml") . | sha256sum }}
    spec:
      securityContext:
          fsGroup: {{ .Values.securityContext.fsGroup }}
          fsGroupChangePolicy: {{ .Values.securityContext.fsGroupChangePolicy }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: web
      containers:
        - name: web
          image: {{ template "ocis.image" $ }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["ocis"]
          args: ["web", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            readOnlyRootFilesystem: true
          env:
            {{ if .Values.goMemLimit }}
            - name: GOMEMLIMIT
              value: {{ .Values.goMemLimit }}
            {{ end }}

            - name: MICRO_REGISTRY
              value: kubernetes

            - name: WEB_LOG_COLOR
              value: "{{ .Values.logging.color }}"
            - name: WEB_LOG_LEVEL
              value: "{{ .Values.logging.level }}"
            - name: WEB_LOG_PRETTY
              value: "{{ .Values.logging.pretty }}"

            # debug
            - name: WEB_DEBUG_PPROF
              value: "{{ .Values.debug.profiling }}"

            - name: WEB_HTTP_ADDR
              value: 0.0.0.0:9100
            - name: WEB_DEBUG_ADDR
              value: 0.0.0.0:9104

            {{ if .Values.services.web.theme.path }}
            - name: WEB_UI_THEME_PATH
              value: {{ .Values.services.web.theme.path }}
            {{ end }}

            - name: WEB_OIDC_AUTHORITY
            {{ if not .Values.features.externalUserManagement.enabled }}
              value: https://{{ .Values.externalDomain }}
            {{ else }}
              value: {{ .Values.features.externalUserManagement.oidc.issuerURI }}
            {{ end }}
            - name: WEB_UI_THEME_SERVER
              value: https://{{ .Values.externalDomain }}
            - name: WEB_UI_CONFIG_SERVER
              value: https://{{ .Values.externalDomain }}
            - name: WEB_OIDC_METADATA_URL
              value: https://{{ .Values.externalDomain }}/.well-known/openid-configuration

            - name: WEB_CACHE_TTL
              value: "600"

          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl --silent --fail http://localhost:9104/healthz
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3


          resources: {{ toYaml .Values.resources | nindent 12 }}
          ports:
            - name: http
              containerPort: 9100
            - name: metrics-debug
              containerPort: 9104
          volumeMounts:
            - name: configs
              mountPath: /etc/ocis
      volumes:
        - name: configs
          configMap:
            name: web-config
